#!/bin/bash
# Session management script for i3.

LOCKERS=("xflock4" "light-locker" "i3lock")

# Lock screen with i3lock.
session_lock() {
	# Suspend notifications while locked.
	killall -SIGUSR1 dunst

	# Unsuspend notifications on exit.
	trap 'killall -SIGUSR2 dunst' exit

	# Iterate through list of supporter lockers and choose based on precedence.
	for locker in ${LOCKERS[@]}
	do
		# Do not attempt to use non-existing locker.
		if [ "x$(which ${locker})" == "x" ]
		then
			continue
		fi

		# Lock screen using locker command.
		case "${locker}" in
			i3lock)
				local tmp="$(mktemp -d)"
				local assets="${HOME}/.config/i3/assets"
				local effect="convert -resize 20% -fill '#222' -colorize 50% -blur 0x1 -resize 500% $$f ${tmp}/_i3lock.png"

				# Create blurred-out screenshot of current screen.
				scrot -z -e "${effect}" "${tmp}/__i3lock.png"
				convert -gravity center -composite "${tmp}/_i3lock.png" "${assets}/lock-overlay.png" "${tmp}/i3lock.png"

				# Lock screen.
				i3lock -u -i "${tmp}/i3lock.png"

				# Remove cached file on exit.
				trap "rm -Rf ${tmp}" EXIT
				;;
			light-locker)
				light-locker-command -l
				;;
			*)
				${locker}
				;;
		esac

		# Return early if locker command succeeded.
		if [ $? -eq 0 ]
		then
			return
		fi
	done
}

# Suspend and lock screen.
session_suspend() {
	session_lock
	systemctl suspend
}

# Close all running applications and log out.
session_logout() {
	i3-msg exit
}

# Close all running applications and reboot.
session_reboot() {
	systemctl reboot
}

# Close all running applications and power off.
session_poweroff() {
	systemctl poweroff -i
}

ACTION=${1}

case ${ACTION} in
lock)
	session_lock
	;;
suspend)
	session_suspend
	;;
logout)
	session_logout
	;;
reboot)
	session_reboot
	;;
poweroff)
	session_poweroff
	;;
*)
	echo 'Unknown command, please use one of the following:'
	echo "'lock', 'suspend', 'logout', 'reboot', 'poweroff'"
esac
